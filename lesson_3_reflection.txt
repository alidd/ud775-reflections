When would you want to use a remote repository rather than keeping all your work
local?

    Always:
      safety (as backup)
      always and everywhere accessible
      team work

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because I want stable, controlled state of local repository,
    without unexpected changes.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

    fork is a copy of a repository where I can not push to
      to make a copy of some repository at github to make pull request(s)
      or to modify as my own.
    clone is a copy of a repository
      to start a local work
    branch is labeled commit in the same repository
      to mark some point in the development

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Speed?
    Possibility to work offline?

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    by pigeon post
    Git GUI: https://www.gitkraken.com/
    using
    hg and Bitbucket
    https://gitlab.com
    https://sourceforge.net/
    https://allura.apache.org/
    https://cloud.google.com/source-repositories/
    commercial:
      https://aws.amazon.com/codecommit/
      https://en.wikipedia.org/wiki/FogBugz
        http://www.fogcreek.com/fogbugz/devhub
      http://beanstalkapp.com/


When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When I want to keep master clean of experiments and uncomplete features
      Benefit - always having working app at master
    When I want to make pull request
      Benefit - collaboration: reviews, work with repos I can not commit to
